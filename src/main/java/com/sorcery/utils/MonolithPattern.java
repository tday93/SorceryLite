package com.sorcery.utils;


import com.sorcery.block.ModBlock;
import net.minecraft.block.Blocks;

public enum MonolithPattern
{

    CHISELED(new BlockPattern.PatternBuilder()
            .addLine("-----------------")
            .addLine("------NNNNN------")
            .addLine("----NN-----NN----")
            .addLine("---N---NNN---N---")
            .addLine("--N--NN---NN--N--")
            .addLine("--N-N--NNN--N-N--")
            .addLine("-N--N-N---N-N--N-")
            .addLine("-N-N-N-NNN-N-N-N-")
            .addLine("-N-N-N-NIN-N-N-N-")
            .addLine("-N-N-N-NNN-N-N-N-")
            .addLine("-N--N-N---N-N--N-")
            .addLine("--N-N--NNN--N-N--")
            .addLine("--N--NN---NN--N--")
            .addLine("---N---NNN---N---")
            .addLine("----NN-----NN----")
            .addLine("------NNNNN------")
            .addLine("-----------------")
            .build()
    ),
    DARK(new BlockPattern.PatternBuilder()
            .addLine("NNNNNNNNNNNNNNNNN")
            .addLine("NNNNNNNNNNNNNNNNN")
            .addLine("NNNNNN-----NNNNNN")
            .addLine("NNNN---------NNNN")
            .addLine("NNN-----------NNN")
            .addLine("NNN----NNN----NNN")
            .addLine("NN----NNNNN----NN")
            .addLine("NN---NNNNNNN---NN")
            .addLine("NN---NNNINNN---NN")
            .addLine("NN---NNNNNNN---NN")
            .addLine("NN----NNNNN----NN")
            .addLine("NNN----NNN----NNN")
            .addLine("NNN-----------NNN")
            .addLine("NNNN---------NNNN")
            .addLine("NNNNNN-----NNNNNN")
            .addLine("NNNNNNNNNNNNNNNNN")
            .addLine("NNNNNNNNNNNNNNNNN")
            .build()
    ),
    LAPIS(new BlockPattern.PatternBuilder()
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-------NNN-------")
            .addLine("-----NNNNNNN-----")
            .addLine("----NNNNNNNNN----")
            .addLine("----NNNNNNNNN----")
            .addLine("---NNNNNNNNNNN---")
            .addLine("---NNNNNINNNNN---")
            .addLine("---NNNNNNNNNNN---")
            .addLine("----NNNNNNNNN----")
            .addLine("----NNNNNNNNN----")
            .addLine("-----NNNNNNN-----")
            .addLine("-------NNN-------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .build()
    ),
    LUNAR(new BlockPattern.PatternBuilder()
            .addLine("NNNNNNNNNNNNNNNNN")
            .addLine("NNNNNNNNNNNNNNNNN")
            .addLine("NNNNNNNNNNNNNNNNN")
            .addLine("NNN-----------NNN")
            .addLine("NNN-PPPPPPPPP-NNN")
            .addLine("NNN-P-------P-NNN")
            .addLine("NNN-P-NNNNN-P-NNN")
            .addLine("NNN-P-NNNNN-P-NNN")
            .addLine("NNN-P-NNINN-P-NNN")
            .addLine("NNN-P-NNNNN-P-NNN")
            .addLine("NNN-P-NNNNN-P-NNN")
            .addLine("NNN-P-------P-NNN")
            .addLine("NNN-PPPPPPPPP-NNN")
            .addLine("NNN-----------NNN")
            .addLine("NNNNNNNNNNNNNNNNN")
            .addLine("NNNNNNNNNNNNNNNNN")
            .addLine("NNNNNNNNNNNNNNNNN")
            .build()
    ),
    SOLAR(new BlockPattern.PatternBuilder()
            .addLine("PNNNNNNN-NNNNNNNP")
            .addLine("N-NNNNNN-NNNNNN-N")
            .addLine("NNPNNNNN-NNNNNPNN")
            .addLine("NNN-NNNN-NNNN-NNN")
            .addLine("NNNNPNNN-NNNPNNNN")
            .addLine("NNNNN-NN-NN-NNNNN")
            .addLine("NNNNNNPN-NPNNNNNN")
            .addLine("NNNNNNN-N-NNNNNNN")
            .addLine("-------NIN-------")
            .addLine("NNNNNNN-N-NNNNNNN")
            .addLine("NNNNNNPN-NPNNNNNN")
            .addLine("NNNNN-NN-NN-NNNNN")
            .addLine("NNNNPNNN-NNNPNNNN")
            .addLine("NNN-NNNN-NNNN-NNN")
            .addLine("NNPNNNNN-NNNNNPNN")
            .addLine("N-NNNNNN-NNNNNN-N")
            .addLine("PNNNNNNN-NNNNNNNP")
            .build()
    ),
    CHISELED_RING(new BlockPattern.PatternBuilder()
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("--------C--------")
            .addLine("------C---C------")
            .addLine("-----------------")
            .addLine("-----C--I--C-----")
            .addLine("-----------------")
            .addLine("------C---C------")
            .addLine("--------C--------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addBlockMapping(ModBlock.MONOLITH_CHISELED_MIDDLE.get(), 'C')
            .build()
    ),
    CRAFTING_RING(new BlockPattern.PatternBuilder()
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-------C-C-------")
            .addLine("-----C-----C-----")
            .addLine("-----------------")
            .addLine("----C-------C----")
            .addLine("--------I--------")
            .addLine("----C-------C----")
            .addLine("-----------------")
            .addLine("-----C-----C-----")
            .addLine("-------C-C-------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addBlockMapping(ModBlock.MONOLITH_CHISELED_BOTTOM.get(), 'C')
            .build()
    ),
    NULL_PATTERN(new BlockPattern.PatternBuilder()
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("--------I--------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .addLine("-----------------")
            .build()
    );



    public final BlockPattern pattern;

    MonolithPattern(BlockPattern pattern)
    {
        this.pattern = pattern;
    }
}
